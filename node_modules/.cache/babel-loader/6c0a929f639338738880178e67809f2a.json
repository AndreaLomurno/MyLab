{"ast":null,"code":"var _jsxFileName = \"/Users/lomu/Desktop/Conjoint-Form-Template-1/src/components/CustomForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Row, Col, Container } from \"reactstrap\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport React, { useState, useEffect } from 'react';\nimport { SETTINGS } from \"./shared/settings\";\nimport * as axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomForm = props => {\n  _s();\n\n  const product_profiles = SETTINGS.product_profiles;\n  const n_attributes = SETTINGS.n_attributes;\n  const n_question = SETTINGS.n_questions;\n  const DATA = props.data;\n  const [selected, setselected] = useState(new Set());\n  const [control, setcontrol] = useState(new Set());\n  var [j, trial] = [0, [], []];\n  if (DATA.length % product_profiles !== 0) alert(\"Number of questions wrong!\");\n  useEffect(() => {\n    selected.forEach(r => {\n      let box = document.getElementById(`row-${r}`);\n      let btn = document.getElementById(`btn-${r}`);\n      box.style.backgroundColor = \"lightgreen\";\n      btn.style.backgroundColor = 'rgba(182, 41, 41,0.9)';\n      btn.innerText = 'Deselect';\n    });\n  });\n\n  function saveSelect(id, idx) {\n    var row_check = Math.floor(idx / 2.9);\n\n    if (selected.has(id)) {\n      let box = document.getElementById(`row-${id}`);\n      box.style.backgroundColor = \"rgb(250, 227, 227)\";\n      setcontrol(prev => new Set([...prev].filter(x => x !== row_check)));\n      setselected(prev => new Set([...prev].filter(x => x !== id)));\n    } else {\n      setcontrol(prev => new Set(prev.add(row_check)));\n      setselected(prev => new Set(prev.add(id)));\n    }\n  }\n\n  function onFinalSubmit() {\n    if (selected.size < n_question) {\n      var missing = [];\n\n      for (let i = 0; i < n_question; i++) {\n        if (!control.has(i)) missing.push(i);\n      }\n\n      toast.error( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: props.lang === 'it' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Devi rispondere a tutte le domande, mancano le domande numero: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 86\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 91\n          }, this), \" \", missing.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Missing the following answers \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 53\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 58\n          }, this), \" \", missing.join(', ')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this));\n    } else {\n      const FRESH_DATA = DATA.map(r => {\n        selected.has(r.id) ? r.isChoiced = 1 : r.isChoiced = 0;\n        return r;\n      });\n      axios.get(SETTINGS.jsonbin + \"latest\").then(res => {\n        var prev = res.data;\n        prev.push(FRESH_DATA);\n        axios.put(SETTINGS.jsonbin, prev).then(toast.success('Thank you so much <3', {\n          style: {\n            padding: \"100px\"\n          }\n        })).catch(e => console.log({\n          e\n        }));\n      }).catch(e => alert(\"Ops something went wrong! be sure that you starting JSONbin is an empty list. Error -> \" + JSON.stringify(e.message)));\n    }\n  }\n\n  for (let idx = 0; idx < DATA.length; idx += 3) {\n    j++;\n    const options = DATA.slice(idx, idx + product_profiles);\n    const renderedOptions = options.map(r => {\n      const HandleChecked = () => {\n        if (control.has(Math.floor(idx / 2.9)) && selected.has(r.id)) {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            id: `btn-${r.id}`,\n            className: \"question-button-col\",\n            onClick: () => {\n              saveSelect(r.id, idx);\n            },\n            children: props.lang === 'it' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Seleziona\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 71\n            }, this)\n          }, r.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this);\n        } else if (control.has(Math.floor(idx / 2.9))) {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            id: `btn-${r.id}`,\n            className: \"question-button-col\",\n            onClick: () => {\n              toast.error( /*#__PURE__*/_jsxDEV(\"span\", {\n                children: props.lang === 'it' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Numero massimo di scelte \\xE8 1 per domanda\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 77\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 82\n                  }, this), \"Se vuoi modificare la tua scelta deseleziona ci\\xF2 che hai gi\\xE0 selezionato.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 33\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Maximum Choice per question is 1 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 70\n                  }, this), \"Deselect first the other option.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this), {\n                style: {\n                  backgroundColor: \"rgb(238, 117, 117)\"\n                }\n              });\n            },\n            children: props.lang === 'it' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Seleziona\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 71\n            }, this)\n          }, r.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            id: `btn-${r.id}`,\n            className: \"question-button-col\",\n            onClick: () => {\n              saveSelect(r.id, idx);\n            },\n            children: props.lang === 'it' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Seleziona\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 48\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 71\n            }, this)\n          }, r.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this);\n        }\n      };\n\n      const AttributesLevels = () => {\n        var renderedAttributes = [];\n\n        for (let i = 0; i < n_attributes; i++) {\n          renderedAttributes.push( /*#__PURE__*/_jsxDEV(Col, {\n            xs: \"12\",\n            children: [\" \", SETTINGS[props.lang].mask[i][r[i]]]\n          }, \"mask-\" + i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 45\n          }, this));\n        }\n\n        return renderedAttributes;\n      };\n\n      return /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"3\",\n        className: \"record-option text-center\",\n        id: `row-${r.id}`,\n        children: [/*#__PURE__*/_jsxDEV(AttributesLevels, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          children: /*#__PURE__*/_jsxDEV(HandleChecked, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, \"last-\" + r.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this);\n    });\n\n    const Attributes = () => {\n      var attributes = [];\n\n      for (let i = 0; i < n_attributes; i++) {\n        attributes.push( /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          children: SETTINGS[props.lang].attributes[[i]]\n        }, \"attrbute-\" + i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }, this));\n      }\n\n      return attributes;\n    };\n\n    trial.push( /*#__PURE__*/_jsxDEV(Row, {\n      className: \"question-row align-items-center text-left\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: props.lang === 'it' ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Domanda  \", j, \"/\", SETTINGS.n_questions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Question  \", j, \"/\", SETTINGS.n_questions]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 87\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: props.lang === 'it' ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Scegli l'opzione che ritieni migliore.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select the options that you prefer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        sm: \"3\",\n        className: \"attribute-names text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: props.lang === 'it' ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Gli attributi si riferiscono a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 44\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The attributes refer to:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Attributes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this), window.innerWidth > 800 ? /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"12\",\n          className: \"question-button-col\",\n          children: \"\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 45\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), renderedOptions]\n    }, j, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"text-center question-container\",\n    children: [/*#__PURE__*/_jsxDEV(Toaster, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"questionario-title\",\n      id: \"title\",\n      children: props.lang === 'it' ? /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Questionario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), trial, /*#__PURE__*/_jsxDEV(Col, {\n      className: \"col-final-submit\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"success\",\n        className: \"btn-go-form\",\n        onClick: () => onFinalSubmit(),\n        children: props.lang === 'it' ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Invia Questionario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 41\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Submit Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 74\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CustomForm, \"6wKV9I580LclGb02d/Tx2ZZV/Rk=\");\n\n_c = CustomForm;\nexport default CustomForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomForm\");","map":{"version":3,"sources":["/Users/lomu/Desktop/Conjoint-Form-Template-1/src/components/CustomForm.jsx"],"names":["Button","Row","Col","Container","toast","Toaster","React","useState","useEffect","SETTINGS","axios","CustomForm","props","product_profiles","n_attributes","n_question","n_questions","DATA","data","selected","setselected","Set","control","setcontrol","j","trial","length","alert","forEach","r","box","document","getElementById","btn","style","backgroundColor","innerText","saveSelect","id","idx","row_check","Math","floor","has","prev","filter","x","add","onFinalSubmit","size","missing","i","push","error","lang","join","FRESH_DATA","map","isChoiced","get","jsonbin","then","res","put","success","padding","catch","e","console","log","JSON","stringify","message","options","slice","renderedOptions","HandleChecked","AttributesLevels","renderedAttributes","mask","Attributes","attributes","window","innerWidth"],"mappings":"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","sourcesContent":["import { Button, Row, Col, Container } from \"reactstrap\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport React, { useState, useEffect } from 'react'\nimport { SETTINGS } from \"./shared/settings\"\nimport * as axios from 'axios'\n\nconst CustomForm = (props) => {\n\n    const product_profiles = SETTINGS.product_profiles\n    const n_attributes = SETTINGS.n_attributes\n    const n_question = SETTINGS.n_questions\n    const DATA = props.data\n\n    const [selected, setselected] = useState(new Set())\n    const [control, setcontrol] = useState(new Set())\n    var [j, trial] = [0, [], []];\n\n    if (DATA.length % product_profiles !== 0) alert(\"Number of questions wrong!\")  \n\n    useEffect(() => {\n        selected.forEach(r => {\n            let box = document.getElementById(`row-${r}`)\n            let btn = document.getElementById(`btn-${r}`)\n            box.style.backgroundColor = \"lightgreen\" \n            btn.style.backgroundColor ='rgba(182, 41, 41,0.9)'\n            btn.innerText='Deselect'\n            })})\n\n    function saveSelect(id, idx){\n        var row_check = Math.floor(idx/2.9)\n        if (selected.has(id)){\n            let box = document.getElementById(`row-${id}`)\n            box.style.backgroundColor = \"rgb(250, 227, 227)\"\n            setcontrol(prev => new Set([...prev].filter(x => x !== row_check)))     \n            setselected(prev => new Set([...prev].filter(x => x !== id)))}\n        else{\n            setcontrol(prev => new Set(prev.add(row_check)))     \n            setselected(prev => new Set(prev.add(id)))}\n    }\n\n    function onFinalSubmit(){\n        if (selected.size < n_question) {\n            var missing = []\n            for (let i=0; i < n_question; i++){if (!control.has(i)) missing.push(i)}\n            toast.error(\n            <span>\n                {props.lang==='it'?\n                <span>Devi rispondere a tutte le domande, mancano le domande numero: <br/><br/> {missing.join(', ')}\n                </span>:\n                <span>Missing the following answers <br/><br/> {missing.join(', ')}</span>}\n            </span>)\n        }\n        else{\n            const FRESH_DATA = DATA.map(r => {\n                selected.has(r.id)? r.isChoiced = 1: r.isChoiced = 0\n                return r\n            })\n\n            axios.get(SETTINGS.jsonbin+\"latest\")\n                .then(res => {\n                    var prev = res.data\n                    prev.push(FRESH_DATA)\n                    axios.put(SETTINGS.jsonbin, prev)\n                        .then(toast.success('Thank you so much <3', {style: {padding:\"100px\"}}))\n                        .catch(e => console.log({e}))})\n                .catch(e =>  alert(\"Ops something went wrong! be sure that you starting JSONbin is an empty list. Error -> \" +  JSON.stringify(e.message)))\n        }\n    }\n    \n\n    for (let idx = 0; idx < DATA.length; idx+=3){\n        j++\n        const options = DATA.slice(idx, idx+ product_profiles)\n        const renderedOptions = options.map( r => { \n            const HandleChecked = () =>{ \n                if (control.has(Math.floor(idx/2.9)) && (selected.has(r.id))){\n                    return(\n                        <Button color='primary'  key={r.id}\n                            id={`btn-${r.id}`}\n                            className='question-button-col' \n                            onClick={()=>{saveSelect(r.id, idx);}}>\n                            {props.lang==='it'?<span>Seleziona</span>:<span>Select</span>}\n                    </Button>)} \n                else if (control.has(Math.floor(idx/2.9))){\n                    return(\n                        <Button color='primary'   key={r.id}\n                            id={`btn-${r.id}`}\n                            className='question-button-col' \n                            onClick={()=> {toast.error(\n                                <span>\n                                {props.lang==='it'? \n                                <span>\n                                    Numero massimo di scelte è 1 per domanda<br/><br/>\n                                    Se vuoi modificare la tua scelta deseleziona \n                                    ciò che hai già selezionato.\n                                </span>:\n                                <span>\n                                    Maximum Choice per question is 1 <br/>\n                                    Deselect first the other option.\n                                </span>}\n                                </span>, { style: {backgroundColor:\"rgb(238, 117, 117)\"}}\n         \n                            )}}>\n                            {props.lang==='it'?<span>Seleziona</span>:<span>Select</span>}\n                    </Button>)} \n                else{\n                    return(\n                        <Button color='primary'  key={r.id}\n                            id={`btn-${r.id}`}\n                            className='question-button-col' \n                            onClick={()=> {saveSelect(r.id, idx);}}>\n                            {props.lang==='it'?<span>Seleziona</span>:<span>Select</span>}\n\n                    </Button>\n                )}}\n           \n            const AttributesLevels = () => {\n                var renderedAttributes = []\n                for (let i = 0; i < n_attributes; i++){\n                    renderedAttributes.push(<Col xs='12' key={\"mask-\"+i}> {SETTINGS[props.lang].mask[i][r[i]]}</Col>)} \n                return renderedAttributes\n            }\n\n            return(\n            <Col sm='3' className='record-option text-center' id={`row-${r.id}`} key={\"last-\"+r.id}>\n                < AttributesLevels/>\n            <Col xs='12'>\n                < HandleChecked  />\n                </Col>\n            </Col>\n        )})\n\n\n        const Attributes = () =>{\n            var attributes = []\n            for (let i = 0; i < n_attributes; i++){\n                attributes.push(<Col xs='12' key={\"attrbute-\"+i}>{SETTINGS[props.lang].attributes[[i]]}</Col>);}\n            return attributes\n        }\n\n        trial.push(\n            <Row className='question-row align-items-center text-left' key={j}>\n                <Col xs='12'>\n                    <h4>{props.lang==='it'?<p>Domanda  {j}/{SETTINGS.n_questions}</p>:<p>Question  {j}/{SETTINGS.n_questions}</p>}</h4>\n                    <h5>\n                        {props.lang==='it'?<p>Scegli l'opzione che ritieni migliore.</p>\n                        :<p>Select the options that you prefer</p>}\n                        </h5>\n                </Col>\n                <Col sm='3' className='attribute-names text-center'>\n                    <h6>{props.lang==='it'?<p>Gli attributi si riferiscono a</p>:<p>The attributes refer to:</p>}</h6>\n                    <Attributes/>\n                    {window.innerWidth>800? <Col xs='12' className='question-button-col'>&nbsp;</Col>:null}\n                </Col>\n                    {renderedOptions}\n            </Row>\n        )\n  \n    }\n\n\n    return (\n        <Container className='text-center question-container'>\n             <Toaster />\n            <h1 className='questionario-title' id='title'>\n                {props.lang==='it'? <span>Questionario</span>: <span>Survey</span> }\n            </h1>\n            {trial}\n            <Col className='col-final-submit'>\n                <Button color='success' className='btn-go-form' onClick={()=>onFinalSubmit()}>\n                    {props.lang==='it'? <span>Invia Questionario</span>: <span>Submit Form</span> }\n                </Button>\n            </Col>\n        </Container>\n    )\n}\n\nexport default CustomForm\n"]},"metadata":{},"sourceType":"module"}